## Refer to http://caffe.berkeleyvision.org/installation.html
# Contributions simplifying and improving our build system are welcome!

# cuDNN acceleration switch (uncomment to build with cuDNN).
 USE_CUDNN := 1

# CPU-only switch (uncomment to build without GPU support).
# CPU_ONLY := 1

# To customize your choice of compiler, uncomment and set the following.
# N.B. the default for Linux is g++ and the default for OSX is clang++
# CUSTOM_CXX := g++

# CUDA directory contains bin/ and lib/ directories that we need.
CUDA_DIR := /usr/local/cuda
# On Ubuntu 14.04, if cuda tools are installed via
# "sudo apt-get install nvidia-cuda-toolkit" then use this instead:
# CUDA_DIR := /usr

# CUDA architecture setting: going with all of them (up to CUDA 5.5 compatible).
# For the latest architecture, you need to install CUDA >= 6.0 and uncomment
# the *_50 lines below.
CUDA_ARCH := -gencode arch=compute_20,code=sm_20 \
		-gencode arch=compute_20,code=sm_21 \
		-gencode arch=compute_30,code=sm_30 \
		-gencode arch=compute_35,code=sm_35 \
		 -gencode arch=compute_50,code=sm_50 \
		 -gencode arch=compute_50,code=compute_50

# BLAS choice:
# atlas for ATLAS (default)
# mkl for MKL
# open for OpenBlas
BLAS := mkl
# Custom (MKL/ATLAS/OpenBLAS) include and lib directories.
# Leave commented to accept the defaults for your choice of BLAS
# (which should work)!
BLAS_INCLUDE := /nfs/hn47/ashrivas/cv-libs/caffe-dep/intel/mkl/include
BLAS_LIB := /nfs/hn47/ashrivas/cv-libs/caffe-dep/intel/mkl/lib/intel64

# This is required only if you will compile the matlab interface.
# MATLAB directory should contain the mex binary in /bin.
MATLAB_DIR := /opt/matlab/8.1
# MATLAB_DIR := /Applications/MATLAB_R2012b.app

# NOTE: this is required only if you will compile the python interface.
# We need to be able to find Python.h and numpy/arrayobject.h.
PYTHON_INCLUDE := /nfs/hn47/ashrivas/cv-libs/yodapython/env/include/python2.7 \
		/nfs/hn47/ashrivas/cv-libs/yodapython/env/lib/python2.7/site-packages/numpy/core/include

# We need to be able to find libpythonX.X.so or .dylib.
PYTHON_LIB := /nfs/hn47/ashrivas/cv-libs/yodapython/pyenv/lib

# Uncomment to support layers written in Python (will link against Python libs)
WITH_PYTHON_LAYER := 1

# Whatever else you find you need goes here.
INCLUDE_DIRS := $(PYTHON_INCLUDE) \
	/nfs/hn47/ashrivas/cv-libs/caffe-dep/protobuf/include /nfs/hn47/ashrivas/cv-libs/caffe-dep/hdf5/include \
	/nfs/hn47/ashrivas/cv-libs/caffe-dep/boost/include \
	/nfs/hn47/ashrivas/cv-libs/caffe-dep/snappy/include /nfs/hn47/ashrivas/cv-libs/caffe-dep/leveldb/include \
	/usr/include /usr/local/include /nfs/hn47/ashrivas/cv-libs/caffe-dep/opencvc/include \
	/nfs/hn47/ashrivas/cv-libs/caffe-dep/gflags/include /opt/glog/include \
	/nfs/hn47/ashrivas/cv-libs/mdb/libraries/liblmdb \
	/nfs/hn47/ashrivas/cv-libs/caffe-dep/install/cudnn-6.5-linux-x64-v2
	#/nfs/hn47/ashrivas/cv-libs/caffe-dep/install/cudnn-6.5-linux-R1
LIBRARY_DIRS := $(PYTHON_LIB) /nfs/hn47/ashrivas/codes/fast-rcnn-prerelease2/caffe-fast-rcnn/build/lib \
	/nfs/hn47/ashrivas/cv-libs/caffe-dep/boost/lib \
	/nfs/hn47/ashrivas/cv-libs/caffe-dep/protobuf/lib /nfs/hn47/ashrivas/cv-libs/caffe-dep/hdf5/lib \
	/nfs/hn47/ashrivas/cv-libs/caffe-dep/snappy/lib /nfs/hn47/ashrivas/cv-libs/caffe-dep/leveldb/lib \
	/usr/lib /usr/lib64 /nfs/hn47/ashrivas/cv-libs/caffe-dep/opencvc/lib \
	/nfs/hn47/ashrivas/cv-libs/caffe-dep/gflags/lib /opt/glog/lib \
	/nfs/hn47/ashrivas/cv-libs/mdb/libraries/liblmdb \
	/nfs/hn47/ashrivas/cv-libs/caffe-dep/install/cudnn-6.5-linux-x64-v2
	#/nfs/hn47/ashrivas/cv-libs/caffe-dep/install/cudnn-6.5-linux-R1

BUILD_DIR := build
DISTRIBUTE_DIR := distribute

# Uncomment for debugging. Does not work on OSX due to https://github.com/BVLC/caffe/issues/171
# DEBUG := 1

# The ID of the GPU that 'make runtest' will use to run unit tests.
TEST_GPUID := 0

# enable pretty build (comment to see full commands)
Q ?= @
